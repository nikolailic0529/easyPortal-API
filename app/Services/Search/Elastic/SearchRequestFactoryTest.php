<?php declare(strict_types = 1);

namespace App\Services\Search\Elastic;

use App\Models\Model;
use App\Services\Search\Builder;
use Closure;
use Laravel\Scout\Builder as ScoutBuilder;
use Tests\TestCase;

/**
 * @internal
 * @coversDefaultClass \App\Services\Search\Elastic\SearchRequestFactory
 */
class SearchRequestFactoryTest extends TestCase {
    // <editor-fold desc="Tests">
    // =========================================================================
    /**
     * @covers ::makeFilter
     *
     * @dataProvider dataProviderMakeFilter
     *
     * @param array<mixed> $expected
     */
    public function testMakeFilter(array $expected, Closure $prepare): void {
        $builder = $this->app->make(Builder::class, [
            'query' => '*',
            'model' => new class() extends Model {
                // empty
            },
        ]);

        $prepare($builder);

        $factory = new class() extends SearchRequestFactory {
            /**
             * @inheritDoc
             */
            public function makeFilter(ScoutBuilder $builder): ?array {
                return parent::makeFilter($builder); // TODO: Change the autogenerated stub
            }
        };

        $this->assertEquals($expected, $factory->makeFilter($builder));
    }
    // </editor-fold>

    // <editor-fold desc="DataProviders">
    // =========================================================================
    /**
     * @return array<string, mixed>
     */
    public function dataProviderMakeFilter(): array {
        return [
            'where'                 => [
                [
                    [
                        'term' => ['where' => '123'],
                    ],
                ],
                static function (Builder $builder): void {
                    $builder->where('where', '123');
                },
            ],
            'whereIn'               => [
                [
                    [
                        'terms' => ['whereIn' => ['a', 'b', 'c']],
                    ],
                    [
                        'terms' => ['whereIn2' => ['1', '2', '3']],
                    ],
                ],
                static function (Builder $builder): void {
                    $builder->whereIn('whereIn', ['a', 'b', 'c']);
                    $builder->whereIn('whereIn2', ['1', '2', '3']);
                },
            ],
            'whereNot'              => [
                [
                    [
                        'bool' => [
                            'must_not' => [
                                [
                                    'term' => ['whereNot' => '123'],
                                ],
                            ],
                        ],
                    ],
                ],
                static function (Builder $builder): void {
                    $builder->whereNot('whereNot', '123');
                },
            ],
            'where + whereNot'      => [
                [
                    [
                        'term' => ['where' => '123'],
                    ],
                    [
                        'bool' => [
                            'must_not' => [
                                [
                                    'term' => ['whereNot' => '123'],
                                ],
                            ],
                        ],
                    ],
                ],
                static function (Builder $builder): void {
                    $builder->where('where', '123');
                    $builder->whereNot('whereNot', '123');
                },
            ],
            'whereNotIn'            => [
                [
                    [
                        'bool' => [
                            'must_not' => [
                                [
                                    'terms' => ['whereNotIn' => ['a', 'b', 'c']],
                                ],
                                [
                                    'terms' => ['whereNotIn2' => ['1', '2', '3']],
                                ],
                            ],
                        ],
                    ],
                ],
                static function (Builder $builder): void {
                    $builder->whereNotIn('whereNotIn', ['a', 'b', 'c']);
                    $builder->whereNotIn('whereNotIn2', ['1', '2', '3']);
                },
            ],
            'whereNot + whereNotIn' => [
                [
                    [
                        'bool' => [
                            'must_not' => [
                                [
                                    'term' => ['whereNot' => '123'],
                                ],
                                [
                                    'terms' => ['whereNotIn' => ['a', 'b', 'c']],
                                ],
                            ],
                        ],
                    ],
                ],
                static function (Builder $builder): void {
                    $builder->whereNot('whereNot', '123');
                    $builder->whereNotIn('whereNotIn', ['a', 'b', 'c']);
                },
            ],
        ];
    }
    //</editor-fold>
}
