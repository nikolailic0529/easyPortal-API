type Asset {
  id: ID
  productDescription: String
  serialNumber: String
  assetDocument: [AssetDocument]
  zip: String
  sourceDocument: [SourceDocument]
  eolDate: String
  address: String
  eosDate: String
  lifecycleStatus: String
  city: String
  address2: String
  assetTag: String
  assetType: String
  resellerId: String
  vendor: String
  serialNumberIsGenerated: String
  sku: String
  vendorSpecificField: [VendorSpecificField]
  customerId: String
  customer: Company
  reseller: Company
  updatedAt: String
  latitude: String
  longitude: String
  country: String
  countryCode: String
  status: String
  latestContactPersons: [CompanyContactPerson]
  status: String
  assetCoverage: String
}

type AssetDocument {
  skuNumber: String
  endDate: String
  productLineDescription: String
  supportPackage: String
  documentNumber: String
  skuDescription: String
  warrantyEndDate: String
  supportPackageDescription: String
  equipmentNumber: String
  startDate: String
  document: Document
  languageCode: String
  currencyCode: String
  netPrice: String
  discount: String
  listPrice: String
  distributor: Company
  customer: Company
  reseller: Company
  estimatedValueRenewal: String
}

type Company {
  id: ID
  keycloakGroupId: String
  keycloakClientScopeName: String
  companyContactPersons: [CompanyContactPerson]
  vendorSpecificField: [VendorSpecificField]
  companyTypes: [CompanyType]
  name: String
  locations: [Location]
  aliases: [String]
  assets: [Asset]
  documents: [Document]
  updatedAt: String
  keycloakGroupId: String
  keycloakName: String
  keycloakClientScopeName: String
}

type CompanyContactPerson {
  phoneNumber: String
  vendor: String
  name: String
  type: String
  mail: String
}

type CompanyType {
  vendorSpecificId: String
  vendor: String
  type: String
  status: String
}

input DefaultImportSchema {
  vendor: String
  customerNumber: String
  documentNumber: String
  documentType: String
  documentDate: String
  productSku: String!
  productDescription: String
  serialNumber: String!
  equipmentNumber: String
  serviceGroupSku: String
  serviceGroupDescription: String
  serviceProductNumber: String
  serviceProductDescription: String
  serviceLevelDetailDescription: String
  warrantyEndDate: String
  supportLifeEndDate: String
  productType: String
  customerName: String!
  customerLocations: [InputLocation]
  customerContactPersons: [InputContactPerson]
  supportStartDate: String
  supportEndDate: String
  coverageStartDate: String
  coverageEndDate: String
  supportPackage: String
  supportPackageDescription: String
  productLineCodeDescription: String
  listPrice: String
  discount: String
  netPrice: String
  totalNetPrice: String
  currencyCode: String
  languageCode: String
  resellerNumber: String
  resellerName: String!
  resellerZip: String
  resellerCity: String
  resellerAddress: String
  resellerCountry: String
  distributorNumber: String
  distributorName: String!
  distributorZip: String
  distributorCity: String
  distributorAddress: String
  distributorCountry: String
  id: String
}

type Document {
  id: ID
  resellerId: String
  documentEntries: [DocumentEntry]
  endDate: String
  vendorSpecificFields: DocumentVendorSpecificField
  customerId: String
  documentNumber: String
  type: String
  startDate: String
  sourceDocument: [SourceDocument]
  updatedAt: String
  languageCode: String
  totalNetPrice: String
  currencyCode: String
  distributorId: String
  customer: Company
  reseller: Company
  distributor: Company
  contactPersons: [CompanyContactPerson]
}

type DocumentEntry {
  serialNumber: String
  assetId: String
  asset: Asset
  currencyCode: String
  netPrice: String
  discount: String
  listPrice: String
}

type DocumentVendorSpecificField {
  vendor: String
  groupId: String
  groupDescription: String
  totalNetPrice: String
  said: String
}

input InputContactPerson {
  name: String
  type: String
  phoneNumber: String
  mail: String
}

input InputLocation {
  zip: String
  address: String
  city: String
  country: String
  locationType: String
}

input KeyValuePair {
  key: String!
  value: String!
}

type Location {
  zip: String
  address: String
  city: String
  locationType: String
  country: String
  latitude: String
  longitude: String
  countryCode: String
}

type Mutation {
  addDefaultImportSchema(input: DefaultImportSchema): Boolean
}

type Query {
  getAssetsBySerialNumber(serialNumber: String): Asset
  getAssetsByCustomerId(customerId: String!, limit: Int, offset: Int): [Asset]!
  getAssetsByResellerId(resellerId: String!, limit: Int, offset: Int): [Asset]!
  getAssetsByDistributorId(
    distributorId: String!
    limit: Int
    offset: Int
  ): [Asset]!
  getAssetsByVendor(vendor: String!, limit: Int, offset: Int): [Asset]!
  getDocumentsByCostumer(
    customerId: String!
    type: String
    limit: Int
    offset: Int
  ): [Document]!
  getAssets(args: [KeyValuePair], limit: Int, offset: Int): [Asset]!
  getCompanyById(id: String): [Company]!
  assets(limit: Int, offset: Int): [Asset]!
  getResellers(limit: Int, offset: Int): [Company]!
  getDistributors(limit: Int, offset: Int): [Company]!
  getDocumentTypes: [String]!
}

type SourceDocument {
  id: String
  timestamp: String
}

type VendorSpecificField {
  vendor: String
  groupID: String
  said: String
}
