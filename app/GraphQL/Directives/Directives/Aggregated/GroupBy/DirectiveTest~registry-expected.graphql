"""
Sort direction.
"""
enum AggregatedGroupByTypeDirection {
    asc
    desc
}

"""
Group clause for `input A` (only one property allowed at a time).
"""
input AggregatedGroupByClauseA {
    """
    Group by property.
    """
    name: AggregatedGroupByTypeDirection
    @aggregatedGroupByOperatorAsString

    """
    Group by property.
    """
    value: AggregatedGroupByTypeDirection
    @aggregatedGroupByOperatorAsString
}

"""
Group clause for `input B` (only one property allowed at a time).
"""
input AggregatedGroupByClauseB {
    """
    Group by property.
    """
    name: AggregatedGroupByTypeDirection
    @aggregatedGroupByOperatorAsString
}

type AggregatedGroupByTypeGroup {
    count: Int!

    key: String
    @rename(
        attribute: "__key"
    )
}

type Query {
    a(
        order: AggregatedGroupByClauseA!
        @aggregatedGroupBy
    ): [AggregatedGroupByTypeGroup!]!
    @all

    b(
        order: AggregatedGroupByClauseB!
        @aggregatedGroupBy
    ): [AggregatedGroupByTypeGroup!]!
    @all
}

directive @aggregatedGroupBy(
    order: String
    where: String
)
on
    | ARGUMENT_DEFINITION

directive @aggregatedGroupByOperatorAsString
on
    | INPUT_FIELD_DEFINITION

"""
Fetch all Eloquent models and return the collection as the result.
"""
directive @all(
    """
    Point to a function that provides a Query Builder instance.
    Consists of two parts: a class name and a method name, seperated by an `@` symbol.
    If you pass only a class name, the method name defaults to `__invoke`.
    Mutually exclusive with `model`.
    """
    builder: String

    """
    Specify the class name of the model to use.
    This is only needed when the default model detection does not work.
    Mutually exclusive with `builder`.
    """
    model: String

    """
    Apply scopes to the underlying query.
    """
    scopes: [String!]
)
on
    | FIELD_DEFINITION

"""
Change the internally used name of a field or argument.

This does not change the schema from a client perspective.
"""
directive @rename(
    """
    The internal name of an attribute/property/key.
    """
    attribute: String!
)
on
    | ARGUMENT_DEFINITION
    | FIELD_DEFINITION
    | INPUT_FIELD_DEFINITION
