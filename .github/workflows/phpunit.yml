name: PHP Unit

on:
  workflow_call:

permissions:
  contents: read

jobs:
  run:
    name: Test
    runs-on: "ubuntu-latest"

    services:
      mysql:
        image: mysql:8
        ports:
           - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: testing
        options: >-
          --name=mysql
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      elastic:
        image: elasticsearch:8.5.0
        ports:
          - 9200:9200
        env:
          ES_JAVA_OPTS: -Xms128m -Xmx256m
          discovery.type: single-node
          xpack.security.enabled: false
          xpack.security.enrollment.enabled: false
        options: >-
          --health-cmd="curl http://localhost:9200/_cluster/health"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: ./.github/actions/checkout
      - name: Setup Mysql
        run: |
          docker cp "${{ github.workspace }}/.github/mysql.cnf" mysql:/etc/my.cnf.d/github.cnf
          docker restart mysql
      - name: Setup PHP
        uses: ./.github/actions/php
      - name: Setup Node.js
        uses: ./.github/actions/node.js
      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Execute
        env:
          DB_USERNAME: root
          DB_PASSWORD: ""
        run: |
          php artisan test --parallel --recreate-databases --drop-databases
