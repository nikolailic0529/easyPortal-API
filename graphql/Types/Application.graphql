type Application {
    name: String!
    version: String!

    maintenance: ApplicationMaintenance
    @field(resolver: "App\\GraphQL\\Queries\\Application\\Maintenance")

    locale: String!
    @field(resolver: "App\\GraphQL\\Queries\\Application\\Locale")

    settings: [ApplicationSetting!]!
    @authOrgRoot
    @authRoot
    @field(resolver: "App\\GraphQL\\Queries\\Application\\Settings")

    settingGroups: [ApplicationSettingGroup!]!
    @authOrgRoot
    @authRoot
    @field(resolver: "App\\GraphQL\\Queries\\Application\\SettingGroups")

    services: [ApplicationService!]!
    @authOrgRoot
    @authRoot
    @field(resolver: "App\\GraphQL\\Queries\\Application\\Services")

    jobs: [ApplicationJob!]!
    @authOrgRoot
    @authRoot
    @field(resolver: "App\\GraphQL\\Queries\\Application\\Jobs")

    logs(
        where: ApplicationLogsQuery @searchBy
        order: ApplicationLogsSort @sortBy
    ): [ApplicationLog!]!
    @authOrgRoot
    @authRoot
    @paginated(
        model: "App\\Services\\Logger\\Models\\Log"
        builder: "App\\GraphQL\\Queries\\Application\\Logs"
    )
}
