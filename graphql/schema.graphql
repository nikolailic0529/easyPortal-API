#import Scalars/*.graphql
#import Types/*.graphql
#import Filters/*.graphql
#import Inputs/*.graphql
#import Queries/*.graphql
#import Mutations/*.graphql
#import Mutations/**/*.graphql

type Query {
  # General
  # ============================================================================
  "Authenticated user or `null` otherwise."
  me: Me

  "Current organization."
  org: Organization

  "Application information."
  application: Application!
  @field(resolver: "App\\GraphQL\\Queries\\Application\\Application")

  "Client data (settings, translations, etc)."
  client: Client
  @field(resolver: "App\\GraphQL\\Resolvers\\EmptyResolver")

  # Search
  # ============================================================================
  search(
    search: SearchString!
    @search
    @builder(method: "App\\GraphQL\\Queries\\Search")
  ): [SearchResult!]!
  @organization
  @me(permissions: ["customers-view", "assets-view", "quotes-view", "contracts-view"])
  @paginate(
    builder: "App\\GraphQL\\Queries\\Search@builder"
  )

  # Map
  # ============================================================================
  map(
    "Zoom level (1-12)."
    level: Int! @rules(apply: ["App\\Rules\\MapLevel"])

    viewport: MapQuery @searchBy

    where: AssetsQuery @searchBy
  ): [Map!]!
  @organization
  @me(permissions: ["customers-view"])
  @field(resolver: "App\\GraphQL\\Queries\\Map")

  # Organization
  # ============================================================================
  permissions: [Permission!]!
  @organization
  @me(permissions: ["administer", "org-administer"])
  @all

  "List of all possible teams."
  teams: [Team!]!
  @organization
  @me(permissions: ["administer", "org-administer"])
  @all
}
