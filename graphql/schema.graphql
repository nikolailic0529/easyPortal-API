#import Scalars/*.graphql
#import Types/*.graphql

type Query {
    "Current user, `null` for guests."
    me: User

    "Link to perform Sign In, available only for guests."
    authSignIn: String! @guest          # TODO [GraphQL] URL type needed
}

type Mutation {
    "Return the link where the user should be redirected to complete sign-out."
    authSignOut: String! @guard         # TODO [GraphQL] URL type needed

    "Complete sign-in and returns current User if successful."
    authSignInByCode(code: String!, state: String!): User @guest

    "Password based sing-in."
    authSignInByPassword(
        username: String!               # TODO [GraphQL] Email type needed
        password: String!
    ): User @guest @validator

    "Register new user"
    authSignUp(
        given_name: String!
        family_name: String!
        email: String!                  # TODO [GraphQL] Email type needed
        phone: String!                  # TODO [GraphQL] Phone type needed
        company: String!
        reseller: String
    ): Boolean! @guest @validator

    "Reset password"
    authResetPassword(
        username: String!               # TODO [GraphQL] Email type needed
    ): Boolean! @guest
}
