#import Scalars/*.graphql
#import Types/*.graphql
#import Filters/*.graphql
#import Inputs/*.graphql
#import Mutations/*.graphql
#import Mutations/**/*.graphql

type Query {
  # General
  "Current user, `null` for guests."
  me: Me

  # Customers
  "List of all statuses"
  customerStatuses: [Status!]!

  "List of all types"
  customerTypes: [Type!]!

  "List of Customers"
  customers (
    where: CustomersQuery @searchBy
    order: CustomersSort @sortBy
  ): [Customer!]! @organization @guard @paginate

  "Customer with given ID"
  customer(id: ID! @eq): Customer @organization @guard @find

  "List of all assets"
  assets(
    where: AssetsQuery @searchBy
    order: AssetsSort @sortBy
  ): [Asset!]! @organization @guard @paginate

  "List of all countries"
  countries: [Country!]! @all @orderBy(column: "code")

  "List of all cities or filter by country id"
  cities(
    where: CitiesQuery @searchBy
  ): [City!]! @all @orderBy(column: "id")

  "List of all location types related to customer"
  locationTypes: [Type!]!

  "List of all contact types"
  contactTypes: [Type!]!

  "Get Locale"
  locale: String! @deprecated(reason:"use Application.locale instead")

  "List of all asset types"
  assetTypes: [Type!]!

  "List of all oems"
  oems: [Oem!]! @all

  "Get asset by id"
  asset(id: ID! @eq): Asset @organization @guard @find

  "List of all currencies"
  currencies: [Currency!]! @all @orderBy(column: "code")

  "List of all contracts"
  contracts (
    where: DocumentsQuery @searchBy
    order: DocumentsSort @sortBy
  ): [Document!]! @organization @guard @paginate @builder(method: "App\\GraphQL\\Queries\\Contracts")

  "Get contract by id"
  contract(id: ID! @eq): Document @organization @guard @find @builder(method: "App\\GraphQL\\Queries\\Contracts")

  "List of all quotes"
  quotes (
    where: DocumentsQuery @searchBy
    order: DocumentsSort @sortBy
  ): [Document!]! @organization @guard @paginate @builder(method: "App\\GraphQL\\Queries\\Quotes")

  "Get quote by id"
  quote(id: ID! @eq): Document @organization @guard @find @builder(method: "App\\GraphQL\\Queries\\Quotes")

  "Get current organization"
  organization: Organization @organization

  "Get app name & version"
  application: Application!

  "List of all contract types"
  contractTypes: [Type!]!

  "List of all quotes types"
  quoteTypes: [Type!]!

  "Client data"
  client: Client @field(resolver: "App\\GraphQL\\Resolvers\\EmptyResolver")

  "Get all resellers"
  organizations(
    where: ResellerConnectedQuery @searchBy
    order: ResellerConnectedSort @sortBy
  ): [ResellerConnected!]! @all(model: "App\\Models\\Reseller") @root

  "List of all languages"
  languages: [Language!]! @all @orderBy(column: "code")
}

type Mutation {
  "Set Locale"
  locale(
    locale: String! @rules(apply: ["App\\Rules\\Locale"])
  ): Boolean! @deprecated(reason: "use setApplicationLocale instead")

  "Set Organization properties"
  organization(
    locale: String
    currency_id: ID
    branding_dark_theme: Boolean
    branding_primary_color: String  # TODO [GraphQL] Color type needed
    branding_secondary_color: String# TODO [GraphQL] Color type needed
    branding_logo: Upload
    branding_favicon: Upload
    website_url: String             # TODO [GraphQL] URL type needed
    email: String                   # TODO [GraphQL] Email type needed
  ): Boolean! @guard @validator @deprecated(reason:"use updateOrganization instead")
}
