#import Scalars/*.graphql
#import Types/*.graphql
#import Filters/*.graphql
#import Inputs/*.graphql
#import Mutations/*.graphql
#import Mutations/**/*.graphql

type Query {
  # General
  # ============================================================================
  "Authenticated user or `null` otherwise."
  me: Me

  "Current organization."
  organization: Organization

  "Application information."
  application: Application!

  "Client data (settings, translations, etc)."
  client: Client
  @field(resolver: "App\\GraphQL\\Resolvers\\EmptyResolver")

  # Data
  # ============================================================================
  # These enpoints available for anyone

  "List of all OEMs"
  oems: [Oem!]!
  @all

  "List of all currencies."
  currencies: [Currency!]!
  @all
  @orderBy(column: "code")

  "List of all languages."
  languages: [Language!]!
  @all
  @orderBy(column: "code")

  "List of all countries."
  countries: [Country!]!
  @all
  @orderBy(column: "code")

  "List of all cities."
  cities(
    where: CitiesQuery @searchBy
  ): [City!]!
  @all
  @orderBy(column: "id")

  "List of all possible customer statuses."
  customerStatuses: [Status!]!

  "List of all possible customer types."
  customerTypes: [Type!]!

  "List of all possible location types."
  locationTypes: [Type!]!

  "List of all possible contact types."
  contactTypes: [Type!]!

  "List of all possible asset types."
  assetTypes: [Type!]!

  "List of all possible contract types."
  contractTypes: [Type!]!

  "List of all possible quote types."
  quoteTypes: [Type!]!

  "List of all possible asset statuses."
  assetStatuses: [Status!]!

  # Customers
  # ============================================================================
  "List of Customers."
  customers (
    where: CustomersQuery @searchBy
    order: CustomersSort @sortBy
  ): [Customer!]!
  @organization
  @me(permissions: ["view-customers"])
  @paginate

  "Customer."
  customer(id: ID! @eq): Customer
  @organization
  @me(permissions: ["view-customers"])
  @find

  # Assets
  # ============================================================================
  "List of all assets"
  assets(
    where: AssetsQuery @searchBy
    order: AssetsSort @sortBy
  ): [Asset!]!
  @organization
  @me(permissions: ["view-assets", "view-customers"])
  @paginate

  "Asset."
  asset(id: ID! @eq): Asset
  @organization
  @me(permissions: ["view-assets", "view-customers"])
  @find

  # Contracts
  # ============================================================================
  "List of all contracts."
  contracts (
    where: DocumentsQuery @searchBy
    order: DocumentsSort @sortBy
  ): [Document!]!
  @organization
  @me(permissions: ["view-contracts", "view-customers"])
  @builder(method: "App\\GraphQL\\Queries\\Contracts")
  @paginate

  "Contract."
  contract(id: ID! @eq): Document
  @organization
  @me(permissions: ["view-contracts", "view-customers"])
  @builder(method: "App\\GraphQL\\Queries\\Contracts")
  @find

  # Quotes
  # ============================================================================
  "List of all quotes."
  quotes (
    where: DocumentsQuery @searchBy
    order: DocumentsSort @sortBy
  ): [Document!]!
  @organization
  @me(permissions: ["view-quotes", "view-customers"])
  @builder(method: "App\\GraphQL\\Queries\\Quotes")
  @paginate

  "Quote."
  quote(id: ID! @eq): Document
  @organization
  @me(permissions: ["view-quotes", "view-customers"])
  @builder(method: "App\\GraphQL\\Queries\\Quotes")
  @find

  # Administration
  # ============================================================================
  "List of all organizations."
  organizations(
    where: OrganizationsQuery @searchBy
    order: OrganizationsSort @sortBy
  ): [Organization!]!
  @organization(root: true)
  @me(permissions: ["administer"])
  @paginate

  # Deprecated
  # ============================================================================
  "Get Locale"
  locale: String!
  @deprecated(reason:"use Application.locale instead")
}

type Mutation {
  "Set Locale"
  locale(
    locale: String! @rules(apply: ["App\\Rules\\Locale"])
  ): Boolean! @deprecated(reason: "use setApplicationLocale instead")

  "Set Organization properties"
  organization(
    locale: String
    currency_id: ID
    branding_dark_theme: Boolean
    branding_primary_color: String  # TODO [GraphQL] Color type needed
    branding_secondary_color: String# TODO [GraphQL] Color type needed
    branding_logo: Upload
    branding_favicon: Upload
    website_url: String             # TODO [GraphQL] URL type needed
    email: String                   # TODO [GraphQL] Email type needed
  ): Boolean!
  @deprecated(reason:"use updateOrganization instead")
  @me(permissions: ["edit-organization"])
  @validator
}
