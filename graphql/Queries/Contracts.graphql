extend type Query {
  "List of all possible contract types."
  contractTypes(where: ContractTypesQuery @searchBy): [Type!]!
  @organization
  @me
  @all(
    builder: "App\\GraphQL\\Queries\\Contracts\\ContractTypes"
  )

  "List of all possible contract statuses."
  contractStatuses(where: ContractStatusesQuery @searchBy): [Status!]!
  @organization
  @me
  @all(
    builder: "App\\GraphQL\\Queries\\Contracts\\ContractStatuses"
  )

  "List of all contracts."
  contracts (
    where: DocumentsQuery @searchBy
    order: DocumentsSort @sortBy
  ): [Document!]!
  @organization
  @me(permissions: ["contracts-view", "customers-view"])
  @builder(method: "App\\GraphQL\\Queries\\Contracts\\Contracts")
  @paginate

  contractsAggregate(
    where: DocumentsQuery @searchBy
  ): DocumentsAggregate!
  @organization
  @me(permissions: ["contracts-view", "customers-view"])
  @field(resolver: "App\\GraphQL\\Queries\\Contracts\\ContractsAggregate")

  contractsSearch(
    search: String!
    @search
    @builder(method: "App\\GraphQL\\Queries\\Contracts\\ContractsSearch")

    order: DocumentsSearchSort @sortBy
  ): [Document!]!
  @organization
  @me(permissions: ["contracts-view", "customers-view"])
  @paginate

  "Contract."
  contract(id: ID! @eq): Document
  @organization
  @me(permissions: ["contracts-view", "customers-view"])
  @builder(method: "App\\GraphQL\\Queries\\Contracts\\Contracts")
  @find
}
