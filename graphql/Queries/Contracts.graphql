extend type Query {
    "List of all possible contract types."
    contractTypes(where: ContractTypesQuery @searchBy): [Type!]!
    @authOrganization
    @authMe(permissions: ["contracts-view", "customers-view"])
    @all(
        builder: "App\\GraphQL\\Queries\\Contracts\\ContractTypes"
    )
    @cached

    "List of all possible contract statuses."
    contractStatuses(where: ContractStatusesQuery @searchBy): [Status!]!
    @authOrganization
    @authMe(permissions: ["contracts-view", "customers-view"])
    @all(
        builder: "App\\GraphQL\\Queries\\Contracts\\ContractStatuses"
    )
    @cached

    "List of all contracts."
    contracts (
        where: DocumentsQuery @searchBy
        order: DocumentsSort @sortBy
    ): [Document!]!
    @authOrganization
    @authMe(permissions: ["contracts-view", "customers-view"])
    @builder(method: "App\\GraphQL\\Queries\\Contracts\\Contracts")
    @paginated

    contractsSearch(
        search: SearchString!
        @search
        @builder(method: "App\\GraphQL\\Queries\\Contracts\\ContractsSearch")

        order: DocumentsSearchSort @sortBy
    ): [Document!]!
    @authOrganization
    @authMe(permissions: ["contracts-view", "customers-view"])
    @paginated

    "Contract."
    contract(id: ID! @eq): Document
    @authOrganization
    @authMe(permissions: ["contracts-view", "customers-view"])
    @builder(method: "App\\GraphQL\\Queries\\Contracts\\Contracts")
    @find
}
